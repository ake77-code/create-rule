import*as p from"@clack/prompts";function h(t){return t==null?[]:Array.isArray(t)?t:[t]}function y(t,r,i,n){var b,o=t[r],u=~n.string.indexOf(r)?i==null||i===!0?"":String(i):typeof i=="boolean"?i:~n.boolean.indexOf(r)?i==="false"?!1:i==="true"||(t._.push((b=+i,b*0===0?b:i)),!!i):(b=+i,b*0===0?b:i);t[r]=o==null?u:Array.isArray(o)?o.concat(u):[o,u]}function C(t,r){t=t||[],r=r||{};var i,n,b,o,u,l={_:[]},e=0,a=0,s=0,c=t.length;const m=r.alias!==void 0,f=r.unknown!==void 0,d=r.default!==void 0;if(r.alias=r.alias||{},r.string=h(r.string),r.boolean=h(r.boolean),m)for(i in r.alias)for(n=r.alias[i]=h(r.alias[i]),e=0;e<n.length;e++)(r.alias[n[e]]=n.concat(i)).splice(e,1);for(e=r.boolean.length;e-- >0;)for(n=r.alias[r.boolean[e]]||[],a=n.length;a-- >0;)r.boolean.push(n[a]);for(e=r.string.length;e-- >0;)for(n=r.alias[r.string[e]]||[],a=n.length;a-- >0;)r.string.push(n[a]);if(d){for(i in r.default)if(o=typeof r.default[i],n=r.alias[i]=r.alias[i]||[],r[o]!==void 0)for(r[o].push(i),e=0;e<n.length;e++)r[o].push(n[e])}const w=f?Object.keys(r.alias):[];for(e=0;e<c;e++){if(b=t[e],b==="--"){l._=l._.concat(t.slice(++e));break}for(a=0;a<b.length&&b.charCodeAt(a)===45;a++);if(a===0)l._.push(b);else if(b.substring(a,a+3)==="no-"){if(o=b.substring(a+3),f&&!~w.indexOf(o))return r.unknown(b);l[o]=!1}else{for(s=a+1;s<b.length&&b.charCodeAt(s)!==61;s++);for(o=b.substring(a,s),u=b.substring(++s)||e+1===c||(""+t[e+1]).charCodeAt(0)===45||t[++e],n=a===2?[o]:o,s=0;s<n.length;s++){if(o=n[s],f&&!~w.indexOf(o))return r.unknown("-".repeat(a)+o);y(l,o,s+1<n.length||u,r)}}}if(d)for(i in r.default)l[i]===void 0&&(l[i]=r.default[i]);if(m)for(i in l)for(n=r.alias[i]||[];n.length>0;)l[n.shift()]=l[i];return l}function O(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var x={exports:{}},v;function k(){if(v)return x.exports;v=1;let t=process||{},r=t.argv||[],i=t.env||{},n=!(i.NO_COLOR||r.includes("--no-color"))&&(!!i.FORCE_COLOR||r.includes("--color")||t.platform==="win32"||(t.stdout||{}).isTTY&&i.TERM!=="dumb"||!!i.CI),b=(l,e,a=l)=>s=>{let c=""+s,m=c.indexOf(e,l.length);return~m?l+o(c,e,a,m)+e:l+c+e},o=(l,e,a,s)=>{let c="",m=0;do c+=l.substring(m,s)+a,m=s+e.length,s=l.indexOf(e,m);while(~s);return c+l.substring(m)},u=(l=n)=>{let e=l?b:()=>String;return{isColorSupported:l,reset:e("\x1B[0m","\x1B[0m"),bold:e("\x1B[1m","\x1B[22m","\x1B[22m\x1B[1m"),dim:e("\x1B[2m","\x1B[22m","\x1B[22m\x1B[2m"),italic:e("\x1B[3m","\x1B[23m"),underline:e("\x1B[4m","\x1B[24m"),inverse:e("\x1B[7m","\x1B[27m"),hidden:e("\x1B[8m","\x1B[28m"),strikethrough:e("\x1B[9m","\x1B[29m"),black:e("\x1B[30m","\x1B[39m"),red:e("\x1B[31m","\x1B[39m"),green:e("\x1B[32m","\x1B[39m"),yellow:e("\x1B[33m","\x1B[39m"),blue:e("\x1B[34m","\x1B[39m"),magenta:e("\x1B[35m","\x1B[39m"),cyan:e("\x1B[36m","\x1B[39m"),white:e("\x1B[37m","\x1B[39m"),gray:e("\x1B[90m","\x1B[39m"),bgBlack:e("\x1B[40m","\x1B[49m"),bgRed:e("\x1B[41m","\x1B[49m"),bgGreen:e("\x1B[42m","\x1B[49m"),bgYellow:e("\x1B[43m","\x1B[49m"),bgBlue:e("\x1B[44m","\x1B[49m"),bgMagenta:e("\x1B[45m","\x1B[49m"),bgCyan:e("\x1B[46m","\x1B[49m"),bgWhite:e("\x1B[47m","\x1B[49m"),blackBright:e("\x1B[90m","\x1B[39m"),redBright:e("\x1B[91m","\x1B[39m"),greenBright:e("\x1B[92m","\x1B[39m"),yellowBright:e("\x1B[93m","\x1B[39m"),blueBright:e("\x1B[94m","\x1B[39m"),magentaBright:e("\x1B[95m","\x1B[39m"),cyanBright:e("\x1B[96m","\x1B[39m"),whiteBright:e("\x1B[97m","\x1B[39m"),bgBlackBright:e("\x1B[100m","\x1B[49m"),bgRedBright:e("\x1B[101m","\x1B[49m"),bgGreenBright:e("\x1B[102m","\x1B[49m"),bgYellowBright:e("\x1B[103m","\x1B[49m"),bgBlueBright:e("\x1B[104m","\x1B[49m"),bgMagentaBright:e("\x1B[105m","\x1B[49m"),bgCyanBright:e("\x1B[106m","\x1B[49m"),bgWhiteBright:e("\x1B[107m","\x1B[49m")}};return x.exports=u(),x.exports.createColors=u,x.exports}var _=k();const $=O(_),{blue:E,blueBright:A,cyan:B,green:R,greenBright:Y,magenta:S,red:T,redBright:j,reset:D,yellow:F}=$,g=C(process.argv.slice(2),{alias:{h:"help"},boolean:["help","overwrite"]});process.cwd();const I=`Usage: create-vite [OPTION]... [DIRECTORY]

Create a new Vite project in JavaScript or TypeScript.
With no arguments, start the CLI in interactive mode.

Options:
  -t, --template NAME        use a specific template

Available templates:
${F("vanilla-ts     vanilla")}
${R("vue-ts         vue")}
${B("react-ts       react")}
${B("react-swc-ts   react-swc")}
${S("preact-ts      preact")}
${j("lit-ts         lit")}
${T("svelte-ts      svelte")}
${E("solid-ts       solid")}
${A("qwik-ts        qwik")}`;async function M(){if(g._[0]&&N(String(g._[0])),g.overwrite,g.help){console.log(I);return}P(process.env.npm_config_user_agent);const t=await p.select({message:"\u9009\u62E9\u4F60\u8981\u5728\u4EC0\u4E48\u7F16\u8F91\u5668\u4E0B\u521B\u9020rules",options:[{value:"trae",label:"trae"},{value:"cursor",label:"cursor"},{value:"windsurf",label:"windsurf"}]});await W("python-testing-generator"),console.log(t)}function N(t){return t.trim().replace(/\/+$/g,"")}function P(t){if(!t)return;const r=t.split(" ")[0].split("/");return{name:r[0],version:r[1]}}async function W(t){const r=q(t);console.log(r);const i=await fetch(`https://cursor.directory/api/${r}`);if(!i.ok)throw new Error(`Failed to fetch from API: ${i.statusText}`);const n=(await i.json()).data;if(!n)throw new Error(`No rule found with slug: ${r}`);return n}function q(t){if(t.startsWith("http://")||t.startsWith("https://")){const r=t.split("/");return r[r.length-1]}return t}M().catch(t=>{console.error(t)});
